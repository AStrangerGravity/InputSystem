editors:
  - version: 2019.1
platforms:
  - name: win
    type: Unity::VM
    image: package-ci/win10:latest
    flavor: m1.large
  - name: mac
    type: Unity::VM::osx
    image: buildfarm/mac:stable
    flavor: m1.mac
---
{% for editor in editors %}
{% for platform in platforms %}
{{ platform.name }}_{{ editor.version }}:
  name : Build and Test version {{ editor.version }} on {{ platform.name }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor}}
  commands:
    - npm install upm-ci-utils -g --registry https://api.bintray.com/npm/unity/unity-npm
# This part is a bit tricky. `upm-ci package pack` packs up a package to a tgz file
# which can then be used by `upm-ci package test` to test that package in isolation.
# But since we have moved the tests outside of the input system package, we need 
# to test both those packages together. So we take the output of `upm-ci package pack`
# for both packages and merge them together into one folder. We run a little js
# script (`node jsonConcat.js`) to merge the `packages.json` files of both packages.
    - upm-ci package pack --package-path ./Packages/com.unity.inputsystem.tests/
    - mv upm-ci~/packages upm-ci~/packages-old
    - upm-ci package pack --package-path ./Packages/com.unity.inputsystem/
    - mv upm-ci~/packages-old/com.unity.inputsystem.tests-* upm-ci~/packages
    - npm install json-concat
    - node .yamato/jsonConcat.js
    - upm-ci package test --package-path ./Packages/com.unity.inputsystem.tests/ -u {{ editor.version }}
  triggers:
    branches:
      only:
        - "/.*/"
  artifacts:
    UTR_Output.zip:
      paths:
        - "upm-ci~/test-results/**/*"
{% endfor %}
{% endfor %}